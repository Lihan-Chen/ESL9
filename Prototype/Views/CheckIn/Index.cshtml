@model Prototype.Models.CheckInViewModel
@{
    ViewData["Title"] = "Employee Check-In";
}

<h1 class="h4 mb-4">Employee Check-In</h1>

<form asp-action="Index" method="post" class="needs-validation" novalidate>
    @Html.AntiForgeryToken()
    <fieldset class="border rounded-3 p-3 mb-4">
        <legend class="float-none w-auto px-2 fw-semibold">@Model.UserName</legend>
        <input type="hidden" asp-for="UserName" />

        <!-- Shift -->
        <div class="mb-3">
            <label class="form-label d-block fw-semibold">Shift</label>
            <div class="btn-group" role="group" aria-label="Shift selection">
                @foreach (var shift in Enum.GetValues(typeof(Prototype.Models.ShiftType)).Cast<Prototype.Models.ShiftType>())
                {
                    var id = $"shift_{shift}";
                    <input type="radio"
                           class="btn-check"
                           name="Shift"
                           id="@id"
                           value="@shift"
                           @(Model.AssignedShift == shift ? "checked" : "") required />
                    <label class="btn btn-outline-primary" for="@id">@shift</label>
                }
            </div>
            <div class="form-text text-danger">@Html.ValidationMessageFor(m => m.AssignedShift)</div>
        </div>

        <!-- Assignment -->
        <div class="mb-3">
            <label class="form-label d-block fw-semibold">Assignment</label>
            <div class="btn-group" role="group" aria-label="Assignment selection">
                @foreach (var assign in Enum.GetValues(typeof(Prototype.Models.OperatorType)).Cast<Prototype.Models.OperatorType>())
                {
                    var id = $"assign_{assign}";
                    <input type="radio"
                           class="btn-check"
                           name="Assignment"
                           id="@id"
                           value="@assign"
                           @(Model.AssignedOperatorType == assign ? "checked" : "") required />
                    <label class="btn btn-outline-secondary" for="@id">@assign</label>
                }
            </div>
            <div class="form-text text-danger">@Html.ValidationMessageFor(m => m.AssignedOperatorType)</div>
        </div>

        <!-- Facilities -->
        <div class="mb-4">
            <label class="form-label d-block fw-semibold">Facility</label>
            <div class="d-flex flex-wrap gap-2" role="group" aria-label="Facility selection">
                @foreach (var facil in Model.Facilities)
                {
                    var id = $"fac_{facil.FacilNo}";
                    <input type="radio"
                           class="btn-check"
                           name="FacilityId"
                           id="@id"
                           value="@facil.FacilNo"
                           @(Model.FacilNo == facil.FacilNo ? "checked" : "") required />
                    <label class="btn btn-outline-success" for="@id">@facil.FacilName</label>
                }
            </div>
            <div class="form-text text-danger">@Html.ValidationMessageFor(m => m.FacilNo)</div>
        </div>

        <button type="submit" class="btn btn-primary px-4">
            <i class="bi bi-check2-circle me-1"></i>Check In
        </button>
    </fieldset>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
